<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>wxPIC: PIC Programmer for Windows - Help Index</title>
<link href="WxPic.css" rel="stylesheet" type="text/css" />
<link href="WxPic.ico" rel="shortcut icon"/>
</head>

<body>
<div class="left-col">
  <a href="http://wxpic.free.fr/"><img id="Logo" src="LargeLogo.png" width="160" height="96" /></a>
  <div class="toc">
  <div>Content</div>
    <ul>
      <li><a href="#Introduction">Introduction</a></li>
      <li><a href="#Aim">What is  WxPic made for?</a></li>
      <li><a href="#PicList">List of supported Micro-Controllers</a></li>
      <li><a href="#System">System requirements</a></li>
      <li><a href="#cmd_line_arguments">Command Line Arguments</a></li>
      <li><a href="#Interface2">The Human Interface</a></li>
      <li><a href="#Glossaire">Glossaire</a></li>
    </ul>
</div>
</div>
<ul class="top-menu">
  <li class="local">Help Index</li>
  <li><a href="Menu.htm">Menus and Buttons</a></li>
  <li><a href="Panel.htm">Pages</a></li>
  <li><a href="Faq.htm">FAQ</a></li>
</ul>
<div class="content">
<a name="Top" id="Top"></a>
<h1>WxPic<div>PIC Micro-controller Programmer  </div>
</h1>
<p>The PIC Microcontrollers are  <a href="http://www.microchip.com/">Microchip</a> products.</p>
<h2><a name="Introduction" id="Introduction"></a>Introduction</h2>
<p>WxPic is an (approximated) porting of the <a href="http://freenet-homepage.de/dl4yhf/winpicpr.html" target="_blank">DL4YHF's WinPic </a> program in a Free Software development environment including <a href="http://www.wxwidgets.org/" target="_blank">wxWidget</a>, <a href="http://www.mingw.org/" target="_blank">MinGw</a>, <a href="http://www.codeblocks.org/" target="_blank">Code::Blocks, wxSmith</a>.</p>
<p>In this version V1.0 Alpha, WxPic has only been tested with the  PIC12F629 and a serial interface  programmer. It is very likely that bugs remain for other PICs and other interfaces that were managed by the original program. Though PIC12F675, PIC16F630 and PIC16F676 are very close to PIC12F629 and therefore WxPic should work with them too.</p>
<p>WxPic V1.2 contains now the porting of the full WinPic sources including the 18F support that was missing in earlier versions.</p>
<p>WxPic license is identical to WinPic license:</p>
<dl>
  <dt> <a name="disclaimer" id="disclaimer"><u>Disclaimer</u></a> </dt>
  <dd> THIS SOFTWARE IS CONSIDERED 'FREEWARE'. THIS SOFTWARE IS PROVIDED AS IS AND      WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED.
      
    In other words, THE ENTIRE RISK FOR THE USE OF THIS SOFTWARE IS WITH YOU. 
    Permission is granted to use, modify, or redistribute this software so long      as it is not sold or exploited for profit.
  </dd>
  <dd> Use this program as long as you keep in mind that this program is no professional      software !
    Because this program is freeware, the entire risk of its use is with you.      As usual, neither the author nor contributors will be liable for anything.      This also applies to the schematic diagrams presented in this document, and      in &quot;the software&quot; itself.
    A missing copyright note in these documents does not indicate &quot;no copyright&quot;      for names of products or companies mentioned here.
  </dd>
</dl>
<p>WxPic included the WinRing0  version  1.3.1a libraries. The <a href="http://openlibsys.org/manual/License.html">License</a> and the source files are on  <a href="http://openlibsys.org/">OpenLibSys web site </a></p>
<p>The last version of WxPic and its sources are available on the  <a href="http://wxpic.free.fr"> WxPic web </a><a href="http://wxpic.free.fr">site</a>.</p>
<a class="return" href="#Top">Haut</a>
<h2><a name="Aim" id="Aim"></a>What is  WxPic made for?</h2>
<p>In a single line, WxPic allows, with a PC and an adapter (programmer), to program a PIC micro-controller. With some more details, it allows to:</p>
<ul>
  <li>Loading a HEX file such as those generated by <a href="http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1406&amp;dDocName=en019469&amp;part=SW007002" target="_blank">MPLAB</a> the free tool from <a href="http://www.microchip.com/" target="_blank">Microchip</a>. This files defines the binary content of memory areas.</li>
  <li>Mapping these memory areas on the memory areas (code, data and configuration) of a  PIC  micro-controller model to be selected in a list of supported devices.</li>
  <li>Writting in the  device the memory data completly or by part</li>
  <li>Reading the content of the micro-controller (if this is allowed by the device) either to compare it to the loaded memory, or to load it in memory.</li>
  <li>Reviewing, edit or save in HEX format the content of the loaded memory.</li>
  </ul>
<p>And WxPic also helps debugging a home made programmer by allowing to command manually the programmer inputs, or to adjust the timings of the programmer interface management.</p>
<a class="return" href="#Top">Haut</a>
<h2><a name="PicList" id="PicList"></a>List of supported Micro-Controllers</h2>
<ul>
  <li> PIC12F629, (tested)</li>
  <li>PIC12F675, PIC16F630, PIC16F676, (similar to tested PIC)</li>
  <li> PIC16C84, PIC16F84 </li>
  <li> PIC16C61, PIC16C71 </li>
  <li> PIC16C710, PIC16C711  </li>
  <li> PIC10F200/202/204/206</li>
  <li> PIC12F635, PIC12F675, PIC12F683 </li>
  <li> PIC12F609, PIC12F615, PIC16F610, PIC16F616</li>
  <li>PIC16F193x, PIC16LF193x (not tested &amp; slow programming algo to be improved)</li>
  <li> PIC16F627, PIC16F627A, PIC16F628, PIC16F628A</li>
  <li>PIC16F636, PIC16F648A </li>
  <li> PIC16F684, PIC16F688 </li>
  <li> PIC16F73, &nbsp;PIC16F737, PIC16F74, PIC16F76, PIC16F77 </li>
  <li> PIC16F818, PIC16F819 </li>
  <li> PIC16F87, PIC16F88</li>
  <li> PIC16F873A...PIC16F877A</li>
  <li> PIC16F88  </li>
  <li> dsPIC30F2010 -- dsPIC30F6010, dsPIC30F's</li>
  <li>And others by developping  <a href="devlist_format.htm">corresponding parameter files...</a>  </li>
</ul>
<p> <font color="red"><b></b></font>WinPic Support of  PIC18Fxxxx is restored in WxPic starting with WxPic V1.2. This brings back the following devices (though none have been tested with WxPic yet):</p>
<ul>
  <li>PIC18F2550 PIC18F4455 PIC18F4550 PIC18F2220 PIC18F2320 PIC18F2331 PIC18F2420 PIC18F2431 PIC18F2450 PIC18F2455 PIC18F2480 PIC18F2520 PIC18F2525 PIC18F2539 PIC18F2550 PIC18F2580 PIC18F2585 PIC18F2620 PIC18F2680 PIC18F442 PIC18F4220 PIC18F4320 PIC18F4331 PIC18F4420 PIC18F4431 PIC18F4450 PIC18F4480 PIC18F4520 PIC18F452 PIC18F4525 PIC18F4539 PIC18F4550 PIC18F458 PIC18F4580 PIC18F4585 PIC18F4620 PIC18F4680 PIC18F4685 PIC18F6527 PIC18F6585 PIC18F6680 PIC18F8490 </li>
</ul>
<a class="return" href="#Top">Haut</a>
<h2><a name="System" id="System"></a>System requirements</h2>
<p>To use WxPic you need:</p>
<ul>
  <li>A PC running Windows XP or Vista,</li>
  <li>A <a href="#Programmer">supported PIC programmer</a>,</li>
  <li>A parallel port (LPT1 or LPT2) ou série (COM1, COM2, ...) disponible compatible avec le programmateur PIC utilisé.</li>
</ul>
<p><a name="Programmer" id="Programmer"></a>The supported programmers are:</p>
<ul>
  <li>F629 Programmer (tested)</li>
  <li><a href="com84.gif">COM84 Programmer</a> (code tested with F629 Programer)</li>
  <li><a href="http://www.jdm.homepage.dk/newpic3.htm" target="_blank">JDM (2)</a> (code tested with F629 Programer)</li>
  <li><a href="pip84.gif">PIP84</a> (not tested)</li>
  <li><a href="TaitSchema.png">Tait Programmer</a> (not tested)</li>
  <li><a href="http://ww1.microchip.com/downloads/en/AppNotes/00589a.pdf" target="_blank">Microchip AN589</a> (not tested)</li>
  <li><a href="noppp.gif">NOPPP</a> (or <a href="noppp-x.gif">variant with pull-up</a>) by Michael A. Covington (tested with a PIC16F84A)</li>
</ul>
<p>Other programmers based on either the serial interface or parallel interface can be supported by using a text file <a href="CustomInterface.htm">describing its interface</a>. </p>
<a class="return" href="#Top">Haut</a>
<h2> <a name="cmd_line_arguments" id="cmd_line_arguments"></a>Command Line Arguments</h2>
<p> You may call WxPic from a batch file, or an integrated development environment
  to do an automated job without any user intervention. For example, you can
  tell WxPic to load a program from a hexfile, write it into the target device,
  and terminate itself afterwards. </p>
<p> The following list shows all command line parameters which are accepted: </p>
<dl>
  <dt>&lt;any string not beginning with a slash&gt;</dt>
  <dd> considered a file name.
    If the command line contains a /p command (&quot;program)&quot;,&nbsp;this file will
    be loaded into a buffer. If the file cannot be loaded, the evaluation of
    the command line is cancelled immediately; you can try to load the file
    &quot;manually&quot; then.
    If the command line contains a /r command (&quot;read&quot;), this is the name of the
    produced hex file.
    If there is only a filename specified in the command line, but none of the
    following &quot;switches&quot;, the specified file will be loaded into WxPic's buffer
    automatically but not programmed into the device. </dd>
  <dt>/p</dt>
  <dd> program the buffer contents into the connected device
  </dd>
  <dt>/e</dt>
  <dd> erase chip. Not necessary to use this command together with the 'program'
    option because 'p' will automatically erase if necessary.
  </dd>
  <dt>/r</dt>
  <dd> read the contents of the device and dump them into the specified HEX file </dd>
  <dt>/v</dt>
  <dd> Verify. Compares the contents of the device with the specified HEX file.
    Can be used as an &quot;extra&quot; verification together with the /p command, but
    this is usually not required because the programming algorithms for most
    PICs include verifying. </dd>
  <dt>/q</dt>
  <dd> terminates WxPic. Should be the last argument, if you want to terminate
    WxPic after the job is done automatically. Without this command, you must
    close WxPic manually, even when running in command-line mode.
  </dd>
  <dt>/q=5</dt>
  <dd> also terminates WxPic, but waits for 5 seconds before quitting so you will
    have the chance to look at any output in the message window.
  </dd>
  <dt>/nodelay</dt>
  <dd> Usually, when command-line driven operation is active, the program waits
    for a few seconds until &quot;the action starts&quot;. This can rescue a chip, because
    it allows you to terminate the erase-programming operation if you have started
    the wrong batchfile by mistake, etc.
    With the /nodelay option, there will be no pause before the execution of
    the command line starts.
  </dd>
  <dt>/overwrite</dt>
  <dd> With this option, WxPic won't ask before overwriting an already existing
    disk file. Use it together with the /r command if necessary.
  </dd>
  <dt>/device=XXXX</dt>
  <dd> Selects a new device type (to override the device used in the last WxPic
    session). Example: /device=PIC16F628 . No space characters are allowed in
    here !
  </dd>
  <dt>/config_word=XXXX</dt>
  <dd> Overrides the configuration word from any loaded hex file. The parameter
    XXXX is as a four-digit hexadecimal value.
  </dd>
</dl>
<p>The command-line driven operation can be cancelled by pressing ESCAPE. The
  main menu will be enabled anyway. Selecting certain menu items also cancels
  evaluating the command line. </p>
<p> Some command line examples: </p>
<dl>
  <dt><code>WxPic keyer1.hex /p /q</code></dt>
  <dd> Loads the file KEYER1.HEX, programs it into the connected device, and terminates
    WxPic (&quot;quit&quot;).
  </dd>
  <dt><code>WxPic /nodelay c:\pic\my_src\keyer1.hex /p /q</code> </dt>
  <dd> Almost the same, with full path to the hexfile, and&nbsp;a bit faster without
    the 3-second-pause during which the ESCAPE key is polled.
  </dd>
  <dt> <code>WxPic /overwrite /r &quot;readout.hex&quot; /q</code> </dt>
  <dd> Reads the contents, dumps the program to the file &quot;readout.hex&quot; (and overwrites
    the old file without asking). Terminates automatically. </dd>
</dl>
<a class="return" href="#Top">Haut</a>
<h2><a name="Interface2" id="Interface2"></a>The Human Interface</h2>
<p><img src="WxPic.png" width="556" height="369" /></p>
<p>The WxPic Interface mainly consists in: </p>
<ul>
  <li>a <a href="Menu.htm">menu bar</a>, </li>
  <li>a <a href="Menu.htm">button bar</a>,</li>
  <li><a href="Panel.htm">7 pages</a> that can be selected from their tab.</li>
</ul>
<a class="return" href="#Top">Haut</a>
<h2><a name="Glossaire" id="Glossaire"></a>Glossary</h2>
<p>The main terms used in the WxPic user interface and this help are the following:</p>
<dl>
      <dt><a name="Deviceglossary" id="Deviceglossary"></a>Device</dt>
      <dd>The used PIC micro-controller.</dd>
    <dt><a name="Codeglossary" id="Codeglossary"></a>Code</dt>
      <dd>The executable code (program) of the device.</dd>
      <dt><a name="Dataglossary" id="Dataglossary"></a>Data</dt>
      <dd>The non volatile data of the  device.</dd>
    <dt><a name="ConfigGlossary" id="ConfigGlossary"></a>Configuration</dt>
      <dd>The configuration word(s) or more generally all the configuration and identification data.</dd>
      <dt><a name="IdGlossary" id="IdGlossary"></a>Identification</dt>
      <dd>The identification words that is defined by the user or attached to the device. The latter indicates the device model.</dd>
    <dt><a name="Memoryglossary" id="Memoryglossary"></a>Buffer</dt>
      <dd>The  internal  WxPic memory that holds the image of the code, the data, and the device  configuration.</dd>
      <dt><a name="Hexglossary" id="Hexglossary"></a>Hexfile</dt>
      <dd>Text file that decribes the content of memory areas, usually generated by the Microchip <a href="http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1406&amp;dDocName=en019469&amp;part=SW007002" target="_blank">MPLAB</a> development tools. WxPic can also recreate those files by reading non-protected devices.</dd>
    <dt><a name="Programerglossary" id="Programer"></a>Programmer</dt>
      <dd>Hardware peripheral that allows to read an program one or several device models.</dd>
      <dt><a name="InterfaceGlossary" id="Interface"></a>Interface</dt>
      <dd>        The programmer interface  through a serial or parallel port.</dd>
    </dl>
  <a class="return" href="#Top">Haut</a></li>
</div>
</body>
</html>
