<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>wxPIC: PIC Programmer for Windows - Help Index</title>
<link href="WxPic.css" rel="stylesheet" type="text/css" />
<link href="WxPic.ico" rel="shortcut icon"/>
</head>

<body>
<a name="Top" id="Top"></a>
<div class="left-col">
  <a href="http://wxpic.free.fr/"><img id="Logo" src="LargeLogo.png" width="160" height="96" /></a>
<div class="toc">
  <div>Content</div>
    <ul>
      <li><a href="#CodePanel">The Code Page</a></li>
      <li><a href="#DataPanel">The Data Page</a></li>
      <li><a href="#PICConfig">The Device Configuration Page</a></li>
      <li><a href="#MemConfig">The Config Memory</a>
        <ul>
          <li><a href="#ConfigNId">Configuration memory and ID Locations</a></li>
          <li><a href="#DisplayTable">Other Config Data</a></li>
        </ul>
      </li>
      <li><a href="#OptionPanel">The Options Page</a></li>
      <li><a href="#InterfacePanel">The Interface Page</a></li>
      <li><a href="#MessagePanel">The Messages Page</a></li>
    </ul>
</div>

<div class="toc">
  <div>Advanced Information</div>
    <ul>
      <li><a href="devlist_format.htm">Device Definition</a></li>
      <li><a href="Adapter.htm">Interface Definition</a></li>
	</ul>
</div>
    
</div> <!-- End of Left column -->

<ul class="top-menu">
  <li><a href="index.htm">Help Index</a></li>
  <li><a href="Menu.htm">Menus and Buttons</a></li>
  <li class="local">Pages</li>
  <li><a href="Faq.htm">FAQ</a></li>
</ul>
<div class="content">
<h1>The WxPic's Tab Pages</h1>
<p>The tab pages gather the data managed by WxPic and the controls that allows to set up WxPic. The items are distributed in the following pages:</p>
<dl>
  <dt><a href="#CodePanel">Code</a></dt>
  <dd>Displays/Edits the program code buffer(s).</dd>
  <dt><a href="#DataPanel">Data</a></dt>
  <dd>Displays/Edits the data buffer if the selected component has one.</dd>
  <dt><a href="#PICConfig">Device Config</a></dt>
  <dd>Allows to select the device and Display/Edit the configuration in symbolic way.</dd>
  <dt><a href="#MemConfig"> Config Memory</a></dt>
  <dd>Displays/Edits the configuration buffer in hexadecimal or binary representation (including the the configuration words that are managed by the Config PIC page).</dd>
  <dt><a href="#OptionPanel">Options</a></dt>
  <dd>Configures the WxPic behaviour.</dd>
  <dt><a href="#InterfacePanel">Interface</a></dt>
  <dd>Allows to select the programmer interface and provides debugging tools for this interface.</dd>
  <dt><a href="#MessagePanel">Messages</a></dt>
  <dd>Displays the error and debug messages.</dd>
</dl>
<a class="return" href="#Top">Haut</a>
<h2><a name="CodePanel" id="CodePanel"></a>The Code Page</h2>
<p><img src="Code.png" width="285" height="212" /></p>
<p>This page displays the code buffer content modified by the user editing if any. Editing is possible when enabled through the  <a href="Menu.htm#AllowEditMenu">Enable HEX editor menu</a>.</p>
<p>The left column indicates the address at the beginning of the row. The top row indicates the address offset of the column from the beginning of the row.</p>
<p>The colour indicates the word state that can be:</p>
<dl>
  <dt>Used word</dt>
  <dd>Contrasted colour that can be adjusted in the <a href="#ColourChange">Options page</a>.</dd>
  <dt>Unused word (its value should be equal to the erased word value)</dt>
  <dd>Dimmed colour.</dd>
  <dt>Erroneous word (there is a difference between the buffer and the  device memory)</dt>
  <dd>Rouge</dd>
  <dt>Special word (calibration)</dt>
  <dd>Violet</dd>
</dl>
<a class="return" href="#Top">Haut</a>
<h2><a name="DataPanel" id="DataPanel"></a>The Data Page</h2>
<p><img src="Data.png" width="189" height="265" /></p>
<p>This page displays the data buffer content modified by the user editing if any. Editing is possible when enabled through the <a href="Menu.htm#AllowEditMenu">Enable HEX editor menu</a>.</p>
<p><a class="return" href="#Top">Haut</a></p>
<h2><a name="PICConfig" id="PICConfig"></a>The Device Configuration Page</h2>
<p><img src="ConfigPic.png" width="631" height="293" /></p>
<p><a name="DeviceSelect" id="DeviceSelect"></a>This page allows to select the device to program in a dropdown list. It is possible to declare new devices by editing the  <a href="devlist_format.htm" class="quote">Device.ini</a> file.</p>
<p>Depending on the selected device, the code and data memory sizes are displayed in the device properties frame. The disabled checkbox indicates, when checked, that the device memory is flash memory. </p>
<p>The hexadecimal value of the device configuration word(s) are displayed and editable. The meaning of this configuration is provided by the table below. Each line represents a device configuration parameter. The columns indicate:</p>
<ol>
  <li>The parameter name,</li>
  <li>The address of the configuration word that contains this parameter,</li>
  <li>The hexadecimal mask that corresponds to the bits of the configuration word that code the values of this parameter,</li>
  <li>The meaning of the current values of these bits. This value is modifiable by selection in a dropdown list that contains the possible values of the parameter. This list is displayed upon a double clic on the cell to modify. The modification is immediatly applied and reflected in the value of the configuration word.</li>
</ol>
<p>The list of parameters depends on the selected device.</p>
<p>The modification of the configuration word hexadecimal value is immediatly validated and reported in the parameter table.</p>
<p>The saved before erase information is the values of calibration data that are factory programmed but that are erased by the erase operation. WxPic saves this information to be able to reprogram them and avoid loosing the calibration values. In addition this information is displayed in this page.</p>
<a class="return" href="#Top">Haut</a>
<h2><a name="MemConfig" id="MemConfig"></a>The Config Memory</h2>
<p><img src="ConfigMem.png" width="525" height="232" /></p>
<p>This page displays in a table the value of configuration buffer words. It contains among others the configuration words managed by the <a href="#PICConfig">Device Config Page</a>. Each row of the table displays a device configuration buffer word. The columns indicates respectively:</p>
<ol>
  <li> The word address, </li>
  <li>The reserved status of the word when a star is displayed, </li>
  <li>The aim of this word,</li>
  <li>The current value of this word in a hexadecimal or binary representation.</li>
</ol>
<p>In the right panel, the radio buttons allow to select between the hexadecimal and binary representation of the config words. </p>
<p>The checkbox allows to display, when checked, all the words of the configuration buffer even those that are reserved. The reserved words are not modifiable and often not used. When reserved words are displayed they are marked with an star in the left column.</p>
<p>The device ID provides the value of the words that indicates device model (for those that supports this feature). The translation of this value in device name is provided. It should correspond to the <a href="#DeviceSelect">selected device</a>.</p>
<p>The <span class="quote">Apply Edits</span> button allows to apply the changes made to the hexadecimal or binary representation of the configuration buffer content.</p>
<h3><a class="return" href="#Top">Haut</a> </h3>
<h3><a name="ConfigNId" id="ConfigNId"></a>Configuration memory and ID Locations </h3>
<p>Most of the configuration memory addresses store identification information (ID). These locations most often contain four or seven bits per location. For example in &quot;14-bit&quot; devices these locations are mapped to addresses 0x2000 to 0x2003. In contrast to the code memory, the ID locations can be read unscrambled even if the PIC is protected. </p>
<p>In MPASM (the assembler from microchip), there is the __idlocs command (with two underscores) to set these bits, but only the lowest 4 bits in every location. The __idlocs command bundles 4 * 4 bits in a single 32-bit value, presumably because older PICs only had 4 usable bits per ID location. But the 12F675 for example has seven bits per location ! </p>
<p>With WxPic, you can read / modify / write the ID locations (all bits). If ID location data are contained in a HEX file, they will be loaded and displayed also. WxPic does not display the data in MPASM's 4*4-bit-format, it uses a table where all bits are displayed in binary form. You can edit the contents of the grid table. After doing so, click the <span class="quote">Apply edits</span> button under the table. Clicking this  button copies the table contents into an internal buffer, but does not program them into the PIC immediately - the ID locations will be programmed together with the other programmable parts in a PIC. </p>
<h3><a class="return" href="#Top">Haut</a> <a name="DisplayTable" id="DisplayTable"></a>Other Config Data</h3>
<p>The &quot;Device ID word&quot; can be used to identify a chip after reading the PIC. This 14-bit word is mapped to address 0x2006, but not all PICs seem to have it (a test with an old 16F84 always returned 0x3FFF as device ID). The lower 4 or 5 bits may contain the PIC's revision number in some devices. WxPic tries to decode the device ID word and shows the result on the &quot;ID locations&quot; tab. If there is a conflict between the selected PIC device and the readout ID word, the Device ID display turns red. If WxPic cannot find a match for the device ID of the new chip, you may add a new entry to the device database as <a href="devlist_format.htm#device_id_value">explained here</a> (don't forget to set the parameter <span class="quote">DeviceIdValue</span> to the new chip's device ID).</p>
<p>The &quot;Config Memory&quot; tab may also show the contents of some other special function registers which did not fit on the &quot;Configuration Bits&quot; tab. For example, you will find the PIC10F20x's Backup OSCCAL Value in this table. </p>
<p>Because it is entirely unknown how many (and which) cells will be used in the configuration memory in future devices, WxPic's device table  contains information of all really &quot;implemented&quot; cells. More about this in the <a href="devlist_format.htm">chapter about the file  <span class="quote">DEVICES.INI</span></a>, which describes how to add support for future devices.</p>
<a class="return" href="#Top">Haut</a>
<h2><a name="OptionPanel" id="OptionPanel"></a>The Options Page</h2>
<p><img src="Options.png" width="548" height="230" /></p>
<p>This page regroups the choices allowing to modify the WxPic behavior.</p>
<p>The checkboxes CODE, DATA and CONFIG allows to disable, when unchecked, the programmation of the corresponding part of the device memory. Only the checked items are programmed. </p>
<p>Clear buffers before loading HEX files allows to be sure that the memory area not described in the HEX file are unused. On the other hand unchecking this box allows to combine the content of several HEX files.</p>
<p>Raise Vdd before Vpp changes the order the power supplies are raised on the device. You must select the behaviour that suites your device and your programmer. </p>
<p>Le language dropdown list allows to choose a translation of WxPic interface. It will be effective only after a restart of WxPic. Though take care that quitting with <a href="Menu.htm#QuitMenu">Exit without saving the setting</a> will not save the language choice and therefore it will not be applied even after restart.</p>
<p><a name="ColourChange" id="ColourChange"></a>The buttons Code memory color and Data memory color allows to select the display colours of respectively the Code and Data pages. They display the colour dialog twice each. The first time to select the foreground colour, the second time to select the background colour. Red colours should be avoided because they are used to display the errors and the special words.</p>
<p><a name="DevFiles" id="DevFiles"></a>The field <span class="quote">MPLAB DEV-file directory</span> must refer the sub-directory Device of <a href="http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&amp;nodeId=1406&amp;dDocName=en019469&amp;part=SW007002" target="_blank">MPLAB</a> installation where the PIC device definition files provided by Microchip are. Usually this directory is <span class="quote">C:\Program Files\Microchip\MPLAB IDE\Device</span>. If this path is wrong and the current device description file cannot be found, the field title turns red. It will turn black only when the error is fixed (i.e. a path is entered where the needed device file is found).</p>
<p>When this field is left empty, WxPic search for the device description files in the <span class="quote">Devices</span> subdirectory of the WxPic installation directory. Copying those files here could be a good idea in case a future version would not provide them or would use a different format.</p>
<a class="return" href="#Top">Haut</a>
<h2><a name="InterfacePanel" id="InterfacePanel"></a>The Interface Page</h2>
<p><img src="Interface.png" width="483" height="225" /></p>
<p>This page regroups the selection, configuration and tests of the programmer interface.</p>
<p>The upper right list allows to select the model of programmer. This choice implies the type of port that is used by the programmer. The second list allows to select the port to use when there are several on the PC. The address field allows to change the physical addres of the port. Though this is generally a critical error to change this value, the effect could be a crash of the PC.</p>
<p>For the cutstom interfaces it is necessary to select a file that describes the programmer behavior. This is done using the Select button. It is also possible to enter directly the filename in the text field. The <a href="Adapter.htm">interface definition file</a> contains the rules that allows to drive the interface. </p>
<p>The other fields below allows to modify the durations in programmer cycles. Usually it is not necessary to modify them. Though they may help to workaround some weak interface.</p>
<p>The checkboxes on the left allow to modify at will the status of the signal on the device. The Data In value indicates the status of the data input from the device. The optional programmer LEDs and button are indicated too when applicable. This should be necessary only for debugging a new programmer. In fact WxPic performs automatically a programmer test at startup. The result of this auto-test is displayed in the rectangle in the middle of the right panel. The Initialize! button at upper left allows to redo this auto-test. </p>
<p><a name="Admin" id="Admin"></a>WARNING: To use a parallel port adapter, it is necessary to install and run WxPic in an administrator account. VISTA users will have to register WxPic as a priviledeged program. To do this, right-clic on the shortcut used to run the program and choose properties. In the <span class="quote">Compatibility</span> tab check the box at the bottom.</p>
<p><a name="FoolAround" id="FoolAround"></a>When using a parallel port you will generally get the error <span class="quote">WARNING ! Windows fooled around with the LPT port bits !</span></p>
<p>This error is caused by Windows writting to the LPT port without even verifying that it has been open by an application. This is probably used to detect a plug-and-play peripheral (printer) that would be plugged on the LPT port. The  method to de-activate this polling is to modify the registry:</p>
<p class="quote">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Parport\Parameters] &quot;DisableWarmPoll&quot;=dword:00000001</p>
<p>This method is not documented by Microsoft. So it is not sure it will always work. Though it has successfully been tested on XP SP2 and VISTA. You can double-click on the file <span class="quote">DisablePolling.reg</span> at the root of WxPic intallation directory to perform this change. In case you would need to restore the polling of the port use  <span class="quote">EnablePollingBack.reg</span> </p>
<p><a class="return" href="#Top">Haut</a></p>
<h2><a name="MessagePanel" id="MessagePanel"></a>The Messages Page</h2>
<p><img src="Messages.png" width="482" height="224" /></p>
<p>This pages displays the status, debugging and error messages. It should be usefull only in case of error to analyze the details. This is also the page that is displayed during Batch programming. The log window must have the focus when pressing Enter to confirm the start programming for the next device of the batch.</p>
<p>The Clear button allows to empty the message window. It is necessary to perform this operation when the window content size become to large.</p>
<a class="return" href="#Top">Retour</a>
</div>
</body>
</html>
